// RUN: @caesar @file
//
// Test file to check the following pgcl program with caesar encodings
// invariant = true variant = (3 * [!(x % 2 == 0)]) + ite(x >= 10, x - 10, 10 - x), probability function = 0.5, decrease function = 2

proc main() -> ()
{
    var x: UInt
    @ast(true, (3 * [!(x % 2 == 0)]) + ite(x >= 10, x - 10, 10 - x), v, 0.5, 2)
    while x != 10 {
        if x % 2 == 0{
            var prob_choice: Bool
            prob_choice = flip(1/2)
            if prob_choice {
                x = x - 2
            } else {
                x = x + 2
            }
        } else {
            x = x + 1
        }
    }
}
