// RUN: @caesar @file

// The file `lossy_list.heyvl` in this directory is a simplified version of this example.
// We're just keeping this file as it was used in our OOPSLA '23 benchmarks.

domain Exponentials {
    func exp(base: UReal, exponent: UInt): EUReal

    axiom exp_base forall base: UReal. exp(base, 0) == 1
    axiom exp_step forall base: UReal, exponent: UInt. exp(base, exponent + 1) == base * exp(base, exponent)
}

domain List {
    func len(l: List): UInt
    func pop(l: List): List

    axiom list_len forall l: List. len(pop(l)) == len(l) - 1
}

coproc lossy_list(init_l: List) -> (l: List)
    pre ?(len(init_l) == 1) ==> ([true] * 0.5)
    post 1
{
    l = init_l
    @invariant(exp(0.5, len(l)))
    while len(l) > 0 {
        var prob_choice: Bool = flip(0.5)
        if prob_choice {
            l = pop(l)
        } else {
            assert 0 // this is abort
        }
    }
}
