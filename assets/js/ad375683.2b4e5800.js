"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[6242],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2991:(e,t,r)=>{r.d(t,{Z:()=>g});var n=r(7294),a=r(6010),i=r(3438),o=r(9960),s=r(3919),c=r(5999);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:t,children:r}=e;return n.createElement(o.Z,{href:t,className:(0,a.Z)("card padding--lg",l.cardContainer)},r)}function m(e){let{href:t,icon:r,title:i,description:o}=e;return n.createElement(p,{href:t},n.createElement("h2",{className:(0,a.Z)("text--truncate",l.cardTitle),title:i},r," ",i),o&&n.createElement("p",{className:(0,a.Z)("text--truncate",l.cardDescription),title:o},o))}function d(e){let{item:t}=e;const r=(0,i.Wl)(t);return r?n.createElement(m,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,c.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function u(e){let{item:t}=e;const r=(0,s.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.xz)(t.docId??void 0);return n.createElement(m,{href:t.href,icon:r,title:t.label,description:t.description??a?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(u,{item:t});case"category":return n.createElement(d,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function h(e){let{className:t}=e;const r=(0,i.jA)();return n.createElement(g,{items:r.items,className:t})}function g(e){const{items:t,className:r}=e;if(!t)return n.createElement(h,e);const o=(0,i.MN)(t);return n.createElement("section",{className:(0,a.Z)("row",r)},o.map(((e,t)=>n.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},n.createElement(f,{item:e})))))}},80:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),i=r(2991);const o={sidebar_position:6},s="The Caesar Tool",c={unversionedId:"caesar/README",id:"caesar/README",title:"The Caesar Tool",description:"The caesar verifier takes a HeyVL program as input and tries to determine whether it verifies.",source:"@site/docs/caesar/README.md",sourceDirName:"caesar",slug:"/caesar/",permalink:"/docs/caesar/",draft:!1,editUrl:"https://github.com/moves-rwth/caesar/tree/main/website/docs/caesar/README.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"Optional Stopping Theorem",permalink:"/docs/proof-rules/ost"},next:{title:"Program Slicing",permalink:"/docs/caesar/slicing"}},l={},p=[],m={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"the-caesar-tool"},"The Caesar Tool"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," verifier takes a HeyVL program as input and tries to determine whether it ",(0,a.kt)("em",{parentName:"p"},"verifies"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Compile")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," binary with ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo build --release"),".\nThe executable can be found at ",(0,a.kt)("inlineCode",{parentName:"p"},"target/release/caesar"),".\nIn the following, we just write ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," for the executable.\nOmit ",(0,a.kt)("inlineCode",{parentName:"p"},"--release")," for the a binary with less optimizations; the result will be in ",(0,a.kt)("inlineCode",{parentName:"p"},"target/debug/caesar"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Print help:"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"caesar --help"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Verify HeyVL files:"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"caesar file1.heyvl file2.heyvl ..."),"\nAdding ",(0,a.kt)("inlineCode",{parentName:"p"},"--raw")," indicates that input files consist only of a sequence ",(0,a.kt)("a",{parentName:"p",href:"/docs/heyvl/statements"},"HeyVL statements")," and that no declarations such as procedures are expected."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Timeouts and memory limits:"),"\nSet a timeout of 60 seconds using ",(0,a.kt)("inlineCode",{parentName:"p"},"--timeout 60"),".\nSet a memory limit of 16000 megabytes with ",(0,a.kt)("inlineCode",{parentName:"p"},"--mem 16000"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Print tracing messages:"),"\nCaesar uses the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tokio-rs/tracing"},(0,a.kt)("inlineCode",{parentName:"a"},"tracing")," library")," to print (debugging) information during its operation.\nSet the ",(0,a.kt)("inlineCode",{parentName:"p"},"RUST_LOG")," environment variable to specify a filter, e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},'export RUST_LOG="caesar=debug"')," or ",(0,a.kt)("inlineCode",{parentName:"p"},'export RUST_LOG="caesar::smt=trace"'),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Print intermediate data:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"With the ",(0,a.kt)("inlineCode",{parentName:"li"},"--print-parsed")," flag, Caesar pretty-prints the HeyVL code after parsing."),(0,a.kt)("li",{parentName:"ul"},"With the ",(0,a.kt)("inlineCode",{parentName:"li"},"--print-core")," flag, Caesar prints the HeyVL code after parsing, type-checking, and desugaring."),(0,a.kt)("li",{parentName:"ul"},"With the ",(0,a.kt)("inlineCode",{parentName:"li"},"--print-theorem")," flag, Caesar prints the theorem that is encoded into SMT."),(0,a.kt)("li",{parentName:"ul"},"With the ",(0,a.kt)("inlineCode",{parentName:"li"},"--print-smt")," flag, Caesar prints the SMT-LIB query for each verification task. You can also use ",(0,a.kt)("inlineCode",{parentName:"li"},"--smt-dir DIR")," with a directory ",(0,a.kt)("inlineCode",{parentName:"li"},"DIR")," to have Caesar write the SMT-LIB queries to files in ",(0,a.kt)("inlineCode",{parentName:"li"},"DIR"),".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"More topics:")),(0,a.kt)(i.Z,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);