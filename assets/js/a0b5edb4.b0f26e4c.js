"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[4206],{1021:(e,n,t)=>{t.d(n,{A:()=>f});var o=t(6540),i=t(3115);function r(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),t=Array(7).fill(-1);n.forEach(((e,n)=>{const o=t.slice(2,e.level);e.parentIndex=Math.max(...o),t[e.level]=n}));const o=[];return n.forEach((e=>{const{parentIndex:t,...i}=e;t>=0?n[t].children.push(i):o.push(i)})),o}function a({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return e.flatMap((e=>{const o=a({toc:e.children,minHeadingLevel:n,maxHeadingLevel:t});return function(e){return e.level>=n&&e.level<=t}(e)?[{...e,children:o}]:o}))}function s(e){const n=e.getBoundingClientRect();return n.top===n.bottom?s(e.parentNode):n}function l(e,{anchorTopOffset:n}){const t=e.find((e=>s(e).top>=n));if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function c(){const e=(0,o.useRef)(0),{navbar:{hideOnScroll:n}}=(0,i.p)();return(0,o.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function d(e){const n=(0,o.useRef)(void 0),t=c();(0,o.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:o,linkActiveClassName:i,minHeadingLevel:r,maxHeadingLevel:a}=e;function s(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(o),s=function({minHeadingLevel:e,maxHeadingLevel:n}){const t=[];for(let o=e;o<=n;o+=1)t.push(`h${o}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:r,maxHeadingLevel:a}),c=l(s,{anchorTopOffset:t.current}),d=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,t){t?(n.current&&n.current!==e&&n.current.classList.remove(i),e.classList.add(i),n.current=e):e.classList.remove(i)}(e,e===d)}))}return document.addEventListener("scroll",s),document.addEventListener("resize",s),s(),()=>{document.removeEventListener("scroll",s),document.removeEventListener("resize",s)}}),[e,t])}var h=t(6289),m=t(4848);function u({toc:e,className:n,linkClassName:t,isChild:o}){return e.length?(0,m.jsx)("ul",{className:o?void 0:n,children:e.map((e=>(0,m.jsxs)("li",{children:[(0,m.jsx)(h.A,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,m.jsx)(u,{isChild:!0,toc:e.children,className:n,linkClassName:t})]},e.id)))}):null}const p=o.memo(u);function f({toc:e,className:n="table-of-contents table-of-contents__left-border",linkClassName:t="table-of-contents__link",linkActiveClassName:s,minHeadingLevel:l,maxHeadingLevel:c,...h}){const u=(0,i.p)(),f=l??u.tableOfContents.minHeadingLevel,x=c??u.tableOfContents.maxHeadingLevel,v=function({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return(0,o.useMemo)((()=>a({toc:r(e),minHeadingLevel:n,maxHeadingLevel:t})),[e,n,t])}({toc:e,minHeadingLevel:f,maxHeadingLevel:x});return d((0,o.useMemo)((()=>{if(t&&s)return{linkClassName:t,linkActiveClassName:s,minHeadingLevel:f,maxHeadingLevel:x}}),[t,s,f,x])),(0,m.jsx)(p,{toc:v,className:n,linkClassName:t,...h})}},1096:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var o=t(1021);const i={tableOfContentsInline:"tableOfContentsInline_prmo"};var r=t(4848);function a({toc:e,minHeadingLevel:n,maxHeadingLevel:t}){return(0,r.jsx)("div",{className:i.tableOfContentsInline,children:(0,r.jsx)(o.A,{toc:e,minHeadingLevel:n,maxHeadingLevel:t,className:"table-of-contents",linkClassName:null})})}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(6540);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},9973:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"proof-rules/ast","title":"Almost-Sure Termination","description":"Almost-sure termination (AST for short) means that a program terminates with probability one.","source":"@site/docs/proof-rules/ast.md","sourceDirName":"proof-rules","slug":"/proof-rules/ast","permalink":"/docs/proof-rules/ast","draft":false,"unlisted":false,"editUrl":"https://github.com/moves-rwth/caesar/tree/main/website/docs/proof-rules/ast.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"docsSidebar","previous":{"title":"\u03c9-Invariants","permalink":"/docs/proof-rules/omega-invariants"},"next":{"title":"Positive Almost-Sure Termination","permalink":"/docs/proof-rules/past"}}');var i=t(4848),r=t(8453),a=t(1096);const s={sidebar_position:5},l="Almost-Sure Termination",c={},d=[{value:"Lower Bounds on Weakest Pre-Expectations",id:"lower-bounds-on-weakest-pre-expectations",level:2},{value:"A New Proof Rule for Almost-Sure Termination (<code>@ast</code> Annotation)",id:"a-new-proof-rule-for-almost-sure-termination-ast-annotation",level:2},{value:"Usage",id:"usage",level:3},{value:"Inputs",id:"inputs",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",sup:"sup",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"almost-sure-termination",children:"Almost-Sure Termination"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Almost-sure termination"})," (AST for short) means that a program terminates with probability one.\nIn our probabilistic setting, this does not necessarily mean that all executions terminate (we would call that ",(0,i.jsx)(n.em,{children:"certain termination"}),"), but only that the expected value to reach a terminating state is one.\nIn terms of weakest pre-expectations, this means that ",(0,i.jsx)(n.code,{children:"wp[C](1) = 1"})," holds for a program ",(0,i.jsx)(n.code,{children:"C"}),".\nFor a nice overview of details and proof rules that are available in the literature, we refer to ",(0,i.jsx)(n.a,{href:"https://publications.rwth-aachen.de/record/755408/files/755408.pdf#page=139",children:"Chapter 6 of Benjamin Kaminski's PhD thesis"}),".",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["In this documentation, we'll refer to almost-sure termination as probability of termination ",(0,i.jsx)(n.em,{children:"from all initial states"}),".\nThis is often called ",(0,i.jsx)(n.em,{children:"universal almost-sure termination"}),".\nHowever, all definitions and proof rules can be refined to a subset of all possible initial states."]})}),"\n",(0,i.jsx)(n.p,{children:"In Caesar, there are several ways to prove almost-sure termination:"}),"\n","\n",(0,i.jsx)(a.A,{toc:d,maxHeadingLevel:"2"}),"\n",(0,i.jsx)(n.h2,{id:"lower-bounds-on-weakest-pre-expectations",children:"Lower Bounds on Weakest Pre-Expectations"}),"\n",(0,i.jsxs)(n.p,{children:["With an encoding of standard weakest pre-expectation reasoning (",(0,i.jsx)(n.code,{children:"wp"}),"), it is sufficient to encode the proof of ",(0,i.jsx)(n.code,{children:"1 <= wp[C](1)"})," in HeyVL, i.e. verify a ",(0,i.jsx)(n.code,{children:"proc"})," with ",(0,i.jsx)(n.code,{children:"pre"})," and ",(0,i.jsx)(n.code,{children:"post"})," of value ",(0,i.jsx)(n.code,{children:"1"}),".\nSince ",(0,i.jsx)(n.code,{children:"wp[C](1) <= 1"})," always holds (by a property often called ",(0,i.jsx)(n.em,{children:"feasibility"}),"), ",(0,i.jsx)(n.code,{children:"1 <= wp[C](1)"})," implies ",(0,i.jsx)(n.code,{children:"wp[C](1) = 1"}),", i.e. almost-sure termination."]}),"\n",(0,i.jsxs)(n.p,{children:["Lower bounds on weakest pre-expectations need a proof rule like ",(0,i.jsx)(n.a,{href:"/docs/proof-rules/omega-invariants",children:"omega-invariants"})," to reason about loops.\nTo ",(0,i.jsx)(n.em,{children:"refute"})," a lower bound on weakest pre-expectations, ",(0,i.jsx)(n.a,{href:"/docs/proof-rules/unrolling",children:"unrolling"})," (also known as bounded model checking) can be used."]}),"\n",(0,i.jsxs)(n.h2,{id:"a-new-proof-rule-for-almost-sure-termination-ast-annotation",children:["A New Proof Rule for Almost-Sure Termination (",(0,i.jsx)(n.code,{children:"@ast"})," Annotation)"]}),"\n",(0,i.jsxs)(n.p,{children:["Caesar supports the ",(0,i.jsx)(n.em,{children:'"new proof rule for almost-sure termination"'})," by McIver et al. as a built-in encoding.\nYou can find the ",(0,i.jsx)(n.a,{href:"https://arxiv.org/pdf/1711.03588.pdf",children:"extended version of the paper on arxiv"}),".\nThe paper was ",(0,i.jsx)(n.a,{href:"https://dl.acm.org/doi/10.1145/3158121",children:"published at POPL 2018"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The proof rule is based on a real-valued ",(0,i.jsx)(n.em,{children:"loop variant"})," (also known as ",(0,i.jsx)(n.em,{children:"super-martingale"}),") that decreases randomly with a certain probability in each iteration by a certain amount.\nThe latter two quantities are specified by user-provided ",(0,i.jsx)(n.em,{children:"decrease"})," and ",(0,i.jsx)(n.em,{children:"probability"})," functions.\nAdditionally, a Boolean ",(0,i.jsx)(n.em,{children:"invariant"})," must also be specified.\nIt allows to limit the set of states on which almost-sure termination is checked."]}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:['Below is the encoding of the "escaping spline" example ',(0,i.jsx)(n.a,{href:"https://dl.acm.org/doi/pdf/10.1145/3158121#page=18",children:"from Section 5.4 of the paper"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-heyvl",children:"proc ast_example4() -> ()\n    pre 1\n    post 1\n{\n    var x: UInt\n    @ast(\n        /* invariant: */    true,\n        /* variant: */      x,\n        /* variable: */     v,\n        /* prob(v): */      1/(v+1),\n        /* decrease(v): */  1\n    )\n    while x != 0 {\n        var prob_choice: Bool = flip(1 / (x + 1))\n        if prob_choice {\n            x = 0\n        } else {\n            x = x + 1\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"inputs",children:"Inputs"}),"\n",(0,i.jsxs)(n.p,{children:["You can see all five parameters are passed to the ",(0,i.jsx)(n.code,{children:"@ast"})," annotation in sequence:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"invariant"}),": The Boolean invariant. Has to hold before the loop, be maintained in each iteration, and holds after the loop."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"variant"}),": The variant of type ",(0,i.jsx)(n.code,{children:"UReal"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"variable"}),": The free variable ",(0,i.jsx)(n.code,{children:"v"})," in ",(0,i.jsx)(n.code,{children:"prob(v)"})," and ",(0,i.jsx)(n.code,{children:"decrease(v)"})," for their respective parameters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prob(v)"}),": Given a value of the variant ",(0,i.jsx)(n.code,{children:"v"}),", give the probability of a decrease."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"decrease(v)"}),": Given a value of the variant ",(0,i.jsx)(n.code,{children:"v"}),", give the amount of the decrease that happens with probability ",(0,i.jsx)(n.code,{children:"prob(v)"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"While the paper's proof rule supports (demonic and countable) nondeterminism, Caesar's implementation does not at this moment.\nUsers must manually ensure that no nondeterminism is present in the program."}),(0,i.jsxs)(n.p,{children:["The implementation might be extended in the future to support nondeterminism.\nRefer to ",(0,i.jsx)(n.a,{href:"https://dl.acm.org/doi/pdf/10.1145/3158121#page=25",children:"Section 8.1 of the paper"})," for more details."]})]}),"\n","\n",(0,i.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,i.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,i.jsxs)(n.p,{children:['Note that the version of the "new proof rule for almost-sure termination" in Benjamin Kaminski\'s PhD Thesis Theorem 6.8 is slightly different from the one in the published paper at POPL 2018. We use a modified version of the latter. ',(0,i.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);