"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[52],{6687:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"proof-rules/past","title":"Positive Almost-Sure Termination","description":"Positive almost-sure termination (PAST for short) means that a program terminates almost-surely and the expected runtime to termination is finite.","source":"@site/docs/proof-rules/past.md","sourceDirName":"proof-rules","slug":"/proof-rules/past","permalink":"/docs/proof-rules/past","draft":false,"unlisted":false,"editUrl":"https://github.com/moves-rwth/caesar/tree/main/website/docs/proof-rules/past.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Almost-Sure Termination","permalink":"/docs/proof-rules/ast"},"next":{"title":"Optional Stopping Theorem","permalink":"/docs/proof-rules/ost"}}');var n=o(4848),s=o(8453);const i={sidebar_position:6},a="Positive Almost-Sure Termination",l={},c=[{value:"Formal Theorem",id:"formal-theorem",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"positive-almost-sure-termination",children:"Positive Almost-Sure Termination"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Positive almost-sure termination"})," (PAST for short) means that a program ",(0,n.jsx)(t.a,{href:"ast",children:"terminates almost-surely"})," and the expected runtime to termination is finite.\nIn terms of the ",(0,n.jsx)(t.a,{href:"calculi",children:"expected runtime calculus"}),", this means that ",(0,n.jsx)(t.code,{children:"ert[C](0) < \u221e"})," holds for a program ",(0,n.jsx)(t.code,{children:"C"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:['Caesar supports proofs of "PAST from Ranking Superinvariants" by ',(0,n.jsx)(t.a,{href:"https://doi.org/10.1007/978-3-642-39799-8_34",children:"Chakarov and Sankaranarayanan (CAV 2013)"})," as a built-in encoding with the ",(0,n.jsx)(t.code,{children:"@past"})," annotation on ",(0,n.jsx)(t.code,{children:"while"})," loops."]}),"\n",(0,n.jsx)(t.h2,{id:"formal-theorem",children:"Formal Theorem"}),"\n",(0,n.jsx)(t.admonition,{title:"TODO",type:"danger"}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.admonition,{title:"TODO",type:"danger"})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var r=o(6540);const n={},s=r.createContext(n);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);