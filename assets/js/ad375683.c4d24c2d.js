"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[368],{6281:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"caesar/README","title":"The Caesar Tool","description":"The caesar verifier takes a HeyVL program as input and tries to determine whether it verifies.","source":"@site/docs/caesar/README.md","sourceDirName":"caesar","slug":"/caesar/","permalink":"/docs/caesar/","draft":false,"unlisted":false,"editUrl":"https://github.com/moves-rwth/caesar/tree/main/website/docs/caesar/README.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"docsSidebar","previous":{"title":"Optional Stopping Theorem","permalink":"/docs/proof-rules/ost"},"next":{"title":"VSCode Extension & LSP Support","permalink":"/docs/caesar/vscode-and-lsp"}}');var s=r(4848),i=r(8453),c=r(3514);const o={sidebar_position:6},a="The Caesar Tool",l={},d=[];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"the-caesar-tool",children:"The Caesar Tool"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"caesar"})," verifier takes a HeyVL program as input and tries to determine whether it ",(0,s.jsx)(t.em,{children:"verifies"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Compile"})," the ",(0,s.jsx)(t.code,{children:"caesar"})," binary with ",(0,s.jsx)(t.code,{children:"cargo build --release"}),".\nThe executable can be found at ",(0,s.jsx)(t.code,{children:"target/release/caesar"}),".\nIn the following, we just write ",(0,s.jsx)(t.code,{children:"caesar"})," for the executable.\nOmit ",(0,s.jsx)(t.code,{children:"--release"})," for the a binary with less optimizations; the result will be in ",(0,s.jsx)(t.code,{children:"target/debug/caesar"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Print help:"}),"\n",(0,s.jsx)(t.code,{children:"caesar --help"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Verify HeyVL files:"}),"\n",(0,s.jsx)(t.code,{children:"caesar file1.heyvl file2.heyvl ..."}),"\nAdding ",(0,s.jsx)(t.code,{children:"--raw"})," indicates that input files consist only of a sequence ",(0,s.jsx)(t.a,{href:"/docs/heyvl/statements",children:"HeyVL statements"})," and that no declarations such as procedures are expected."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Timeouts and memory limits:"}),"\nSet a timeout of 60 seconds using ",(0,s.jsx)(t.code,{children:"--timeout 60"}),".\nSet a memory limit of 16000 megabytes with ",(0,s.jsx)(t.code,{children:"--mem 16000"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Slicing:"}),"\n",(0,s.jsx)(t.a,{href:"/docs/caesar/slicing",children:"Caesar's slicing"})," is controlled by the following flags:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--no-slice-error"})," flag, Caesar will not do slicing to obtain better error messages (error slicing enabled by default)."]}),"\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--slice-verify"})," flag, Caesar will do slicing for verification (this is not enabled by default)."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Print tracing messages:"}),"\nCaesar uses the ",(0,s.jsxs)(t.a,{href:"https://github.com/tokio-rs/tracing",children:[(0,s.jsx)(t.code,{children:"tracing"})," library"]})," to print (debugging) information during its operation.\nSet the ",(0,s.jsx)(t.code,{children:"RUST_LOG"})," environment variable to specify a filter, e.g. ",(0,s.jsx)(t.code,{children:'export RUST_LOG="caesar=debug"'})," or ",(0,s.jsx)(t.code,{children:'export RUST_LOG="caesar::smt=trace"'}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Print intermediate data:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--print-parsed"})," flag, Caesar pretty-prints the HeyVL code after parsing."]}),"\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--print-core"})," flag, Caesar prints the HeyVL code after parsing, type-checking, and desugaring."]}),"\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--print-theorem"})," flag, Caesar prints the theorem that is encoded into SMT."]}),"\n",(0,s.jsxs)(t.li,{children:["With the ",(0,s.jsx)(t.code,{children:"--print-smt"})," flag, Caesar prints the SMT-LIB query for each verification task. You can also use ",(0,s.jsx)(t.code,{children:"--smt-dir DIR"})," with a directory ",(0,s.jsx)(t.code,{children:"DIR"})," to have Caesar write the SMT-LIB queries to files in ",(0,s.jsx)(t.code,{children:"DIR"}),".","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If ",(0,s.jsx)(t.a,{href:"https://docs.racket-lang.org/raco/read.html",children:(0,s.jsx)(t.code,{children:"raco read"})})," is installed, Caesar will auto-format the SMT-LIB code with it. This is very useful as Z3's default formatting is really confusing sometimes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"More topics:"})}),"\n","\n",(0,s.jsx)(c.A,{})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},3514:(e,t,r)=>{r.d(t,{A:()=>j});r(6540);var n=r(8215),s=r(6972),i=r(8774),c=r(5846),o=r(6654),a=r(1312),l=r(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=r(4848);function u(e){let{href:t,children:r}=e;return(0,h.jsx)(i.A,{href:t,className:(0,n.A)("card padding--lg",d.cardContainer),children:r})}function m(e){let{href:t,icon:r,title:s,description:i}=e;return(0,h.jsxs)(u,{href:t,children:[(0,h.jsxs)(l.A,{as:"h2",className:(0,n.A)("text--truncate",d.cardTitle),title:s,children:[r," ",s]}),i&&(0,h.jsx)("p",{className:(0,n.A)("text--truncate",d.cardDescription),title:i,children:i})]})}function p(e){let{item:t}=e;const r=(0,s.Nr)(t),n=function(){const{selectMessage:e}=(0,c.W)();return t=>e(t,(0,a.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return r?(0,h.jsx)(m,{href:r,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??n(t.items.length)}):null}function f(e){let{item:t}=e;const r=(0,o.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,s.cC)(t.docId??void 0);return(0,h.jsx)(m,{href:t.href,icon:r,title:t.label,description:t.description??n?.description})}function x(e){let{item:t}=e;switch(t.type){case"link":return(0,h.jsx)(f,{item:t});case"category":return(0,h.jsx)(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function g(e){let{className:t}=e;const r=(0,s.$S)();return(0,h.jsx)(j,{items:r.items,className:t})}function j(e){const{items:t,className:r}=e;if(!t)return(0,h.jsx)(g,{...e});const i=(0,s.d1)(t);return(0,h.jsx)("section",{className:(0,n.A)("row",r),children:i.map(((e,t)=>(0,h.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,h.jsx)(x,{item:e})},t)))})}},5846:(e,t,r)=>{r.d(t,{W:()=>l});var n=r(6540),s=r(4586);const i=["zero","one","two","few","many","other"];function c(e){return i.filter((t=>e.includes(t)))}const o={locale:"en",pluralForms:c(["one","other"]),select:e=>1===e?"one":"other"};function a(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,n.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:c(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),o}}),[e])}function l(){const e=a();return{selectMessage:(t,r)=>function(e,t,r){const n=e.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${e}`);const s=r.select(t),i=r.pluralForms.indexOf(s);return n[Math.min(i,n.length-1)]}(r,t,e)}}},8453:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>o});var n=r(6540);const s={},i=n.createContext(s);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);