"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,u=d["".concat(p,".").concat(h)]||d[h]||m[h]||o;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:8},i="Development Guide",s={unversionedId:"devguide",id:"devguide",title:"Development Guide",description:"This guide explains how Caesar and related tools work internally and how to contribute to the code.",source:"@site/docs/devguide.md",sourceDirName:".",slug:"/devguide",permalink:"/docs/devguide",draft:!1,editUrl:"https://github.com/moves-rwth/caesar/tree/main/website/docs/devguide.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docsSidebar",previous:{title:"Model Checking",permalink:"/docs/model-checking"},next:{title:"Publications",permalink:"/docs/publications"}},p={},l=[{value:"Caesar",id:"caesar",level:2},{value:"Website",id:"website",level:2},{value:"VSCode Extension",id:"vscode-extension",level:2},{value:"pgcl2heyvl",id:"pgcl2heyvl",level:2}],c={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development-guide"},"Development Guide"),(0,r.kt)("p",null,"This guide explains how Caesar and related tools work internally and how to contribute to the code."),(0,r.kt)("p",null,"The project is maintained in a GitHub repository: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar"},(0,r.kt)("inlineCode",{parentName:"a"},"github.com/moves-rwth/caesar")),".\nWe use GitHub's issue tracker.\nFeel free to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/issues"},"open an issue")," or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/discussions"},"start a discussion"),".\nYou can also reach the main developer, ",(0,r.kt)("a",{parentName:"p",href:"https://moves.rwth-aachen.de/people/philipp-schroer/"},"Philipp Schr\xf6er"),", by email: ",(0,r.kt)("a",{parentName:"p",href:"mailto:phisch@cs.rwth-aachen.de"},(0,r.kt)("inlineCode",{parentName:"a"},"phisch@cs.rwth-aachen.de")),".\nWe are very happy to work and research with you on Caesar!"),(0,r.kt)("h2",{id:"caesar"},"Caesar"),(0,r.kt)("p",null,"The source code of the main ",(0,r.kt)("a",{parentName:"p",href:"./caesar"},"caesar tool")," begins at the root level of the Git repository.\nIt is a ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html"},"cargo workspace")," containing the main ",(0,r.kt)("inlineCode",{parentName:"p"},"caesar")," crate and the ",(0,r.kt)("inlineCode",{parentName:"p"},"z3rro")," crate."),(0,r.kt)("p",null,"We try to use ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html"},"rustdoc")," as much as possible to document how ",(0,r.kt)("inlineCode",{parentName:"p"},"caesar")," works.\nJust run ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo doc --open")," to build and open the Rust API documentation of the project."),(0,r.kt)("p",null,"To run all tests, execute ",(0,r.kt)("inlineCode",{parentName:"p"},"cargo test --all"),"."),(0,r.kt)("p",null,"The source code for the ",(0,r.kt)("inlineCode",{parentName:"p"},"caesar")," crate lives in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/src"},(0,r.kt)("inlineCode",{parentName:"a"},"src/")),"."),(0,r.kt)("p",null,"Integration tests live in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/tests"},(0,r.kt)("inlineCode",{parentName:"a"},"tests/"))," directory.\nRead the associated ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/blob/master/tests/README.md"},(0,r.kt)("inlineCode",{parentName:"a"},"tests/README.md"))," for more information about these tests."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"z3rro")," is our dedicated crate for basic SMT functionality.\nIt lives in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/z3rro"},(0,r.kt)("inlineCode",{parentName:"a"},"z3rro/")),".\nThe idea is that this code is independent of Caesar itself and may be useful to other projects."),(0,r.kt)("h2",{id:"website"},"Website"),(0,r.kt)("p",null,"The documentation you are reading right now is built using ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docosaurus")," and lives in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/main/website"},(0,r.kt)("inlineCode",{parentName:"a"},"website"))," directory."),(0,r.kt)("p",null,"You can install it using ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm"),": Run ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,r.kt)("p",null,"Then either run ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn start")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"npm run start")," to start a local development server and open the site in a browser window."),(0,r.kt)("h2",{id:"vscode-extension"},"VSCode Extension"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/caesar/vscode-and-lsp"},"Caesar's VSCode extension")," lives in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/main/vscode-ext"},(0,r.kt)("inlineCode",{parentName:"a"},"vscode-ext/")," directory"),".\nThe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/blob/main/vscode-ext/vsc-extension-quickstart.md"},(0,r.kt)("inlineCode",{parentName:"a"},"vscode-ext/vsc-extension-quickstart.md"))," document explains the basics of how to develop and debug the binary."),(0,r.kt)("p",null,"Here, we still use ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," for package management."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm install")," to install the necessary dependencies."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm run compile")," to compile the extension and run the linter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm run watch")," to start a TypeScript compiler server that recompiles when changes are made."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm run lint")," to run the linter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"npm run vscode:prepublish")," compiles as well.")),(0,r.kt)("h2",{id:"pgcl2heyvl"},"pgcl2heyvl"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"pgcl2heyvl")," is our old ",(0,r.kt)("a",{parentName:"p",href:"/docs/pgcl"},"pGCL frontend"),".\nIt lives in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/main/pgcl/pgcl2heyvl"},(0,r.kt)("inlineCode",{parentName:"a"},"pgcl/pgcl2heyvl")),".\nThe tool is written in Python and we use ",(0,r.kt)("a",{parentName:"p",href:"https://python-poetry.org/"},"poetry")," for its dependency management.\nThe most important dependency is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Philipp15b/probably"},(0,r.kt)("inlineCode",{parentName:"a"},"probably"))," which defines the accepted pGCL syntax."),(0,r.kt)("p",null,"The tool has a terrible user interface (need to specify invariants as command-line arguments!) and ",(0,r.kt)("inlineCode",{parentName:"p"},"pgcl2heyvl")," is being phased out (see ",(0,r.kt)("a",{parentName:"p",href:"/docs/pgcl"},"its documentation"),") in favor of integration of the encodings directly in Caesar."))}m.isMDXComponent=!0}}]);