"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[4527],{8054:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"stdlib/lists","title":"Lists","description":"The standard library includes a type for lists []T where T is the type of elements.","source":"@site/docs/stdlib/lists.md","sourceDirName":"stdlib","slug":"/stdlib/lists","permalink":"/docs/stdlib/lists","draft":false,"unlisted":false,"editUrl":"https://github.com/moves-rwth/caesar/tree/main/website/docs/stdlib/lists.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docsSidebar","previous":{"title":"Number Types","permalink":"/docs/stdlib/numbers"},"next":{"title":"Distribution Expressions","permalink":"/docs/stdlib/distributions"}}');var i=t(4848),r=t(8453);const o={sidebar_position:3},l="Lists",c={},d=[{value:"Discussion",id:"discussion",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"lists",children:"Lists"})}),"\n",(0,i.jsxs)(s.p,{children:["The standard library includes a type for lists ",(0,i.jsx)(s.code,{children:"[]T"})," where ",(0,i.jsx)(s.code,{children:"T"})," is the type of elements."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Length"}),": ",(0,i.jsx)(s.code,{children:"func len(list: []T): UInt"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Element Access"}),": ",(0,i.jsx)(s.code,{children:"func select(list: []T, index: UInt): T"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Storing elements"}),": ",(0,i.jsx)(s.code,{children:"func store(list: []T, index: UInt, value: T): []T"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"discussion",children:"Discussion"}),"\n",(0,i.jsxs)(s.p,{children:["The SMT-LIB translation of lists is based on SMT-LIB's arrays, but our lists have a length associated with it.\nYou are only supposed to access elements at indices ",(0,i.jsx)(s.code,{children:"< len(list)"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Some SMT solvers also support ",(0,i.jsx)(s.a,{href:"https://microsoft.github.io/z3guide/docs/theories/Sequences",children:"Sequences"}),", but we do not yet understand those well enough to say how they compare to our lists."]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>l});var n=t(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);