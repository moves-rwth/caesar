"use strict";(self.webpackChunkcaesar_website=self.webpackChunkcaesar_website||[]).push([[224],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2788:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:8},i="Development Guide",s={unversionedId:"devguide",id:"devguide",title:"Development Guide",description:"This guide explains how Caesar and related tools work internally and how to contribute to the code.",source:"@site/docs/devguide.md",sourceDirName:".",slug:"/devguide",permalink:"/docs/devguide",draft:!1,editUrl:"https://github.com/moves-rwth/caesar/tree/main/website/docs/devguide.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docsSidebar",previous:{title:"Model Checking",permalink:"/docs/model-checking"},next:{title:"Publications",permalink:"/docs/publications"}},p={},l=[{value:"Caesar",id:"caesar",level:2},{value:"pgcl2heyvl",id:"pgcl2heyvl",level:2},{value:"Website",id:"website",level:2}],c={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development-guide"},"Development Guide"),(0,a.kt)("p",null,"This guide explains how Caesar and related tools work internally and how to contribute to the code."),(0,a.kt)("p",null,"The whole project currently lives in a GitHub repository: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar"},(0,a.kt)("inlineCode",{parentName:"a"},"github.com/moves-rwth/caesar")),".\nWe use GitHub's issue tracker."),(0,a.kt)("h2",{id:"caesar"},"Caesar"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"./caesar"},"Caesar's"),"'s source code is begins at the root level of the Git repository.\nIt is a ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html"},"cargo workspace")," containing the main ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," crate and the ",(0,a.kt)("inlineCode",{parentName:"p"},"z3rro")," crate."),(0,a.kt)("p",null,"We try to use ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html"},"rustdoc")," as much as possible to document how ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," works.\nJust run ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo doc --open")," to build and open the Rust API documentation of the project."),(0,a.kt)("p",null,"To run all tests, execute ",(0,a.kt)("inlineCode",{parentName:"p"},"cargo test --all"),"."),(0,a.kt)("p",null,"The source code for the ",(0,a.kt)("inlineCode",{parentName:"p"},"caesar")," crate lives in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/src"},(0,a.kt)("inlineCode",{parentName:"a"},"src/")),"."),(0,a.kt)("p",null,"Integration tests live in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/tests"},(0,a.kt)("inlineCode",{parentName:"a"},"tests/"))," directory.\nRead the associated ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/blob/master/tests/README.md"},(0,a.kt)("inlineCode",{parentName:"a"},"tests/README.md"))," for more information about these tests."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"z3rro")," is our dedicated crate for basic SMT functionality.\nIt lives in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/master/z3rro"},(0,a.kt)("inlineCode",{parentName:"a"},"z3rro/")),".\nThe idea is that this code is independent of Caesar itself and may be useful to other projects."),(0,a.kt)("h2",{id:"pgcl2heyvl"},"pgcl2heyvl"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pgcl2heyvl")," is our ",(0,a.kt)("a",{parentName:"p",href:"/docs/pgcl"},"pGCL frontend"),".\nIt lives in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/main/pgcl/pgcl2heyvl"},(0,a.kt)("inlineCode",{parentName:"a"},"pgcl/pgcl2heyvl")),".\nThe tool is written in Python and we use ",(0,a.kt)("a",{parentName:"p",href:"https://python-poetry.org/"},"poetry")," for its dependency management.\nThe most important dependency is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Philipp15b/probably"},(0,a.kt)("inlineCode",{parentName:"a"},"probably"))," which defines the accepted pGCL syntax."),(0,a.kt)("p",null,"The tool has a terrible user interface (need to specify invariants as command-line arguments!) and ",(0,a.kt)("inlineCode",{parentName:"p"},"pgcl2heyvl")," is being phased out (see ",(0,a.kt)("a",{parentName:"p",href:"/docs/pgcl"},"its documentation"),") in favor of integration of the encodings directly in Caesar."),(0,a.kt)("h2",{id:"website"},"Website"),(0,a.kt)("p",null,"The documentation you are reading right now is built using ",(0,a.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},"Docosaurus")," and lives in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/moves-rwth/caesar/tree/main/website"},(0,a.kt)("inlineCode",{parentName:"a"},"website"))," directory."),(0,a.kt)("p",null,"You can install it using ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"npm"),": Run ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,a.kt)("p",null,"Then either run ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run start")," to start a local development server and open the site in a browser window."))}u.isMDXComponent=!0}}]);