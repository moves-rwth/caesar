// ARGS: --encoding "encode-bmc" --calculus "wp" --post "[i=1]" --pre "[1<i &  i < 4 & phase=0] * (2/3) + [not (1<i & i<4 & phase=0)]*1" --k 15

nat i;
nat n; # Does not need to be initialized
nat d;

nat phase; # Initially 0
while(1<i || phase=1){
    if(phase=0){
      n:=i;
      phase:=1;
    }{
        if(0<n){
            {d:=0}[0.5]{d:=1};
            i:=i-d;
            n:=n-1;
        }{ #leave inner loop
            phase:=0;
        }
     }
}
