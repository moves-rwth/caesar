// Auto-generated by pgcl2heyvl from rdspeed.pgcl
//
@ert
coproc main(init_x: UInt, init_y: UInt, init_m: UInt, init_n: UInt, init_r: UInt) -> (x: UInt, y: UInt, m: UInt, n: UInt, r: UInt)
    pre (2 * (init_m - init_y)) + (0.666667 * (init_n - init_x))
    post 0
{
    var prob_choice: Bool
    x = init_x
    y = init_y
    m = init_m
    n = init_n
    r = init_r
    @invariant((2 * (m - y)) + (0.666667 * (n - x)))
    while (x + 3) <= n {
        if y < m {
            prob_choice = flip((1/2))
            if prob_choice {
                r = 0
            } else {
                r = 1
            }
            y = y + r
        } else {
            prob_choice = flip((1/4))
            if prob_choice {
                r = 0
            } else {
                prob_choice = flip((1/3))
                if prob_choice {
                    r = 1
                } else {
                    prob_choice = flip((1/2))
                    if prob_choice {
                        r = 2
                    } else {
                        r = 3
                    }
                }
            }
            x = x + r
        }
        tick 1
    }
}
