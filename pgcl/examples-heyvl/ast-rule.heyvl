// Auto-generated by pgcl2heyvl from ast-rule.pgcl
//
proc main(init_x: UInt) -> (x: UInt)
{
    var prob_choice: Bool
    x = init_x
    @ast(true, (3 * [!((x % 2) == 0)]) + (([10 <= x] * (x - 10)) + ([!(10 <= x)] * (10 - x))), v, 0.5, 2)
    while !(x == 10) {
        if (x % 2) == 0 {
            prob_choice = flip((1/2))
            if prob_choice {
                x = x - 2
            } else {
                x = x + 2
            }
        } else {
            x = x + 1
        }
    }
}
